{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Moru\\\\react-flask\\\\src\\\\components\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport app from \".../firebase.js\";\nimport { getDatabase, child, ref, set, get } from \"firebase/database\";\nimport { isWebUrl } from \"valid-url\";\nimport OverlayTrigger from \"react-bootstrap/Overlay/Trigger\";\nimport ToolTip from \"react-bootstrap/ToolTip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = getDatabase();\nconst data = {\n  longUrl: \"\",\n  preferedAlias: \"\",\n  generatedUrl: \"\",\n  loading: false,\n  errors: [],\n  errorMessage: {},\n  toolTipMessage: \"Copy to Clipboard\"\n};\n\nconst hasError = key => {\n  return formData.errors.indexOf(key) !== -1;\n};\n\nexport const Form = () => {\n  _s();\n\n  const [formData, setFormData] = useState(data);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFormData({ ...data,\n      loading: true,\n      generatedUrl: \"\"\n    });\n    const isFormValid = await validateFormInput();\n\n    if (!isFormValid) {} // Generate generated URL\n\n\n    let generatedKey = nanoid(5);\n    let generatedUrl = \"sanjeev.com/\" + generatedKey;\n\n    if (formData.preferedAlias) {\n      generatedKey = formData.preferedAlias;\n      generatedUrl = \"sanjeev.com/\" + generatedKey;\n    } // Add to Database\n\n\n    const result = await set(ref(db, \"/\" + generatedKey), {\n      generatedKey,\n      generatedUrl: generatedUrl,\n      preferedAlias: formData.preferedAlias,\n      longUrl: formData.longUrl\n    }); // Once added to Database, update Local State.\n\n    setFormData({ ...formData,\n      generatedUrl: generatedUrl,\n      loading: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Form, \"5Xe+7XVdvjRG1GlUIKpskI5oi0Y=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","nanoid","app","getDatabase","child","ref","set","get","isWebUrl","OverlayTrigger","ToolTip","db","data","longUrl","preferedAlias","generatedUrl","loading","errors","errorMessage","toolTipMessage","hasError","key","formData","indexOf","Form","setFormData","handleSubmit","e","preventDefault","isFormValid","validateFormInput","generatedKey","result"],"sources":["C:/Users/Acer/Desktop/Moru/react-flask/src/components/form.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport app from \".../firebase.js\";\r\nimport { getDatabase, child, ref, set, get } from \"firebase/database\";\r\nimport { isWebUrl } from \"valid-url\";\r\nimport OverlayTrigger from \"react-bootstrap/Overlay/Trigger\";\r\nimport ToolTip from \"react-bootstrap/ToolTip\";\r\n\r\nconst db = getDatabase();\r\n\r\nconst data = {\r\n  longUrl: \"\",\r\n  preferedAlias: \"\",\r\n  generatedUrl: \"\",\r\n  loading: false,\r\n  errors: [],\r\n  errorMessage: {},\r\n  toolTipMessage: \"Copy to Clipboard\",\r\n};\r\n\r\nconst hasError = (key) => {\r\n  return formData.errors.indexOf(key) !== -1;\r\n};\r\n\r\nexport const Form = () => {\r\n  const [formData, setFormData] = useState(data);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setFormData({ ...data, loading: true, generatedUrl: \"\" });\r\n    const isFormValid = await validateFormInput();\r\n\r\n    if (!isFormValid) {\r\n    }\r\n\r\n    // Generate generated URL\r\n    let generatedKey = nanoid(5);\r\n    let generatedUrl = \"sanjeev.com/\" + generatedKey;\r\n\r\n    if (formData.preferedAlias) {\r\n      generatedKey = formData.preferedAlias;\r\n      generatedUrl = \"sanjeev.com/\" + generatedKey;\r\n    }\r\n\r\n    // Add to Database\r\n    const result = await set(ref(db, \"/\" + generatedKey), {\r\n      generatedKey,\r\n      generatedUrl: generatedUrl,\r\n      preferedAlias: formData.preferedAlias,\r\n      longUrl: formData.longUrl,\r\n    });\r\n\r\n    // Once added to Database, update Local State.\r\n    setFormData({ ...formData, generatedUrl: generatedUrl, loading: false });\r\n  };\r\n\r\n  return <h1>Form</h1>;\r\n};\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,WAAT,EAAsBC,KAAtB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,GAAvC,QAAkD,mBAAlD;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,EAAE,GAAGR,WAAW,EAAtB;AAEA,MAAMS,IAAI,GAAG;EACXC,OAAO,EAAE,EADE;EAEXC,aAAa,EAAE,EAFJ;EAGXC,YAAY,EAAE,EAHH;EAIXC,OAAO,EAAE,KAJE;EAKXC,MAAM,EAAE,EALG;EAMXC,YAAY,EAAE,EANH;EAOXC,cAAc,EAAE;AAPL,CAAb;;AAUA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EACxB,OAAOC,QAAQ,CAACL,MAAT,CAAgBM,OAAhB,CAAwBF,GAAxB,MAAiC,CAAC,CAAzC;AACD,CAFD;;AAIA,OAAO,MAAMG,IAAI,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACF,QAAD,EAAWG,WAAX,IAA0BzB,QAAQ,CAACY,IAAD,CAAxC;;EAEA,MAAMc,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;IACAH,WAAW,CAAC,EAAE,GAAGb,IAAL;MAAWI,OAAO,EAAE,IAApB;MAA0BD,YAAY,EAAE;IAAxC,CAAD,CAAX;IACA,MAAMc,WAAW,GAAG,MAAMC,iBAAiB,EAA3C;;IAEA,IAAI,CAACD,WAAL,EAAkB,CACjB,CAN+B,CAQhC;;;IACA,IAAIE,YAAY,GAAG9B,MAAM,CAAC,CAAD,CAAzB;IACA,IAAIc,YAAY,GAAG,iBAAiBgB,YAApC;;IAEA,IAAIT,QAAQ,CAACR,aAAb,EAA4B;MAC1BiB,YAAY,GAAGT,QAAQ,CAACR,aAAxB;MACAC,YAAY,GAAG,iBAAiBgB,YAAhC;IACD,CAf+B,CAiBhC;;;IACA,MAAMC,MAAM,GAAG,MAAM1B,GAAG,CAACD,GAAG,CAACM,EAAD,EAAK,MAAMoB,YAAX,CAAJ,EAA8B;MACpDA,YADoD;MAEpDhB,YAAY,EAAEA,YAFsC;MAGpDD,aAAa,EAAEQ,QAAQ,CAACR,aAH4B;MAIpDD,OAAO,EAAES,QAAQ,CAACT;IAJkC,CAA9B,CAAxB,CAlBgC,CAyBhC;;IACAY,WAAW,CAAC,EAAE,GAAGH,QAAL;MAAeP,YAAY,EAAEA,YAA7B;MAA2CC,OAAO,EAAE;IAApD,CAAD,CAAX;EACD,CA3BD;;EA6BA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAjCM;;GAAMQ,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}